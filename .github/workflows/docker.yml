name: Build and Push Docker Images

on:
  push:
    branches: master
  pull_request:
      paths:
        - docker-compose.yml
        - services
  workflow_dispatch:
    inputs:
      auto11:
        description: 'Build and push auto11 profile'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      comfy:
        description: 'Build and push comfy profile'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      download:
        description: 'Build and push download profile'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile: [auto11, comfy, download]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Set up Docker Buildx (required for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USR }}
          password: ${{ secrets.DOCKERHUB_PSS }}

      # Build Docker image only if the selected profile is true
      - name: Build Docker image
        if: ${{ (matrix.profile == 'auto11' && inputs.auto11 == 'true') || 
                (matrix.profile == 'comfy' && inputs.comfy == 'true') || 
                (matrix.profile == 'download' && inputs.download == 'true') }}
        run: docker compose --profile ${{ matrix.profile }} build --progress plain

      # Tag and Push Docker image only if the selected profile is true
      - name: Tag and Push Docker Image
        if: ${{ (matrix.profile == 'auto11' && inputs.auto == 'true') || 
                (matrix.profile == 'comfy' && inputs.comfy == 'true') || 
                (matrix.profile == 'download' && inputs.download == 'true') }}
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          # Get release version if available, otherwise use commit SHA
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF##*/}"
          else
            VERSION="${GITHUB_SHA}"
          fi

          IMAGE_NAME="your-dockerhub-username/your-image:${{ matrix.profile }}"

          # Tag image with both 'latest' and the version
          docker tag ${IMAGE_NAME} ${IMAGE_NAME}:latest
          docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${VERSION}

          # Push both tags to Docker Hub
          docker push ${IMAGE_NAME}:latest
          docker push ${IMAGE_NAME}:${VERSION}
